[tool.poetry]
name = "adventofcode"
version = "0.0.0"
description = "adventofcode"
license = "MIT"
authors = ["Volodymyr Pivoshenko <volodymyr.pivoshenko@gmail.com>"]
maintainers = ["Volodymyr Pivoshenko <volodymyr.pivoshenko@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.13,<4.0"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=4.0.1"
poethepoet = ">=0.31.1"
ipdb = ">=0.13.13"
ipython = ">=8.12.3"

[tool.poetry.group.formatters.dependencies]
isort = ">=5.13.2"
ruff = ">=0.8.1"
pyupgrade = ">=3.19.0"

[tool.poetry.group.linters.dependencies]
mypy = ">=1.13.0"
ruff = ">=0.8.1"
deptry = ">=0.21.1"
codespell = ">=2.3.0"
commitizen = ">=4.0.0"

[tool.poetry.group.lsp.dependencies]
python-lsp-server = { extras = ["all"], version = ">=1.12.0" }
ruff-lsp = ">=0.0.59"
pylsp-mypy = ">=0.6.9"
pylsp-rope = ">=0.1.17"
python-lsp-isort = ">=0.2.0"

[tool.poetry.group.tests.dependencies]
pytest = "7.4.4"
xdoctest = ">=1.2.0"
pytest-lazy-fixture = ">=0.6.3"
pytest-codeblocks = ">=0.17.0"
pytest-mock = ">=3.14.0"
pytest-cov = ">=6.0.0"
pytest-sugar = ">=1.0.0"
coverage = { version = ">=7.6.8", extras = ["toml"] }

[tool.commitizen]
allowed_prefixes = ["Merge", "Initial"]

[tool.isort]
profile = "black"
line_length = 100
lines_after_imports = 2
lines_between_types = 1
color_output = true
force_single_line = true
length_sort_straight = true
force_alphabetical_sort_within_sections = true

[tool.mypy]
python_version = "3.13"
strict = true
warn_unused_configs = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = ["S101", "INP001", "T201", "I001", "D103"]

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.codespell]
skip = ["poetry.lock"]

[tool.deptry.per_rule_ignores]

[tool.pytest.ini_options]
testpaths = ["."]
addopts = ["-l", "-vv", "-rx", "--xdoc", "--color=yes"]

[tool.coverage.run]
omit = ["*/__init__.py"]

[tool.poe]
poetry_command = ""

[tool.poe.tasks.format]
help = "Run formatters"
args = { dir = { options = ["--directory", "-d"], default = ".", help = "Target directory" } }
sequence = [
  { shell = "find src -type f -name '*.py' | xargs pyupgrade --py312-plus", help = "Run annotations formatter" },
  { shell = "isort ${dir}", help = "Run imports formatter" },
  { shell = "ruff format ${dir}", help = "Run code formatter" }
]

[tool.poe.tasks.lint]
help = "Run linters"
args = { dir = { options = ["--directory", "-d"], default = ".", help = "Target directory" } }
sequence = [
  { shell = "deptry ${dir}", help = "Run dependencies linter" },
  { shell = "mypy ${dir}", help = "Run types linter" },
  { shell = "ruff check ${dir}", help = "Run code linter" },
  { shell = "codespell ${dir}", help = "Run spell linter" },
  { shell = "cz check --rev-range .", help = "Run commits linter" }
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
