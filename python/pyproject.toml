[project]
name = "adventofcode"
description = "adventofcode"
version = "0.0.0"
license = { text = "MIT" }
authors = [{ name = "Volodymyr Pivoshenko", email = "volodymyr.pivoshenko@gmail.com" }]
requires-python = "==3.13.*"
dependencies = [
]

[dependency-groups]
dev = [
    "ipdb>=0.13.13",
    "ipython>=9.4.0",
    "poethepoet>=0.36.0",
    "watchdog>=6.0.0",
]
formatters = ["pyupgrade>=3.20.0", "ruff>=0.12.4"]
linters = ["commitizen>=4.8.3", "mypy>=1.17.0", "ruff>=0.12.4"]
tests = [
  "pytest>=8.4.1",
  "pytest-lazy-fixture>=0.6.3",
  "pytest-mock>=3.14.0",
  "pytest-sugar>=1.0.0",
  "pytest-watcher>=0.4.3"
]

[tool.commitizen]
allowed_prefixes = ["Merge", "Initial"]

[tool.mypy]
explicit_package_bases = true
namespace_packages = true
python_version = "3.13"
show_error_codes = true
strict = true
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = ["--color=yes", "--import-mode=importlib", "-l", "-rx", "-vv"]
python_files = ["main.py", "part_01.py", "part_02.py"]
python_functions = "test_*"
testpaths = ["."]

[tool.ruff]
fix = true
line-length = 100
unsafe-fixes = true
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"

[tool.ruff.lint.isort]
force-single-line = true
from-first = false
length-sort-straight = true
lines-after-imports = 2
lines-between-types = 1
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint]
ignore = ["B023", "D103", "D203", "D213", "COM812", "FIX", "I001", "INP001", "PLR2004", "S101", "T201", "TD"]
select = ["ALL"]

[tool.poe]
poetry_command = ""

[tool.poe.tasks.format]
help = "Run formatters"
sequence = [
  { help = "Run annotations formatter", shell = "find . -type f -name '*.py' ! -path './.venv/*' | xargs uv run pyupgrade --py313-plus" },
  { help = "Run code formatter", shell = "uv run ruff format ." }
]

[tool.poe.tasks.lint]
help = "Run linters"
sequence = [
  { help = "Run types linter", shell = "uv run mypy ." },
  { help = "Run code linter", shell = "uv run ruff check ." },
  { help = "Run commits linter", shell = "uv run cz check --rev-range ." }
]

[tool.poe.tasks.tests]
help = "Run tests"
shell = "pytest ."
